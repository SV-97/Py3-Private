from main import uniform_distribution, take
from big_timedelta import BigTimedDelta

from itertools import count
import numpy as np
from datetime import timedelta
from random import uniform, seed
from multiprocessing import Pool, Barrier
from statistics import mean

N_PROCS = 8

RUNS = 150  # 200
LAM = 1e-6  # 4.88e-18
N_0 = 100  # 100

DELTA_T = (1/LAM) / 3e4
P = LAM*DELTA_T
RUNS_PER_PROCESS = RUNS // N_PROCS


def simulation(rank):
    u = uniform_distribution(seed=rank)  # uniform
    ns = []
    seed(rank)
    p = P
    for run in range(RUNS_PER_PROCESS):
        print(f"Rank {rank} @ run {run}")
        n = N_0
        n_0 = N_0
        for t in count(0):
            #print(rank, t, n)
            zs = np.array(list(take(u, n)))
            #zs = np.array([uniform(0, 1) for _ in range(N)])
            k = np.sum(zs < p)  # count how many random numbers are less than p
            n -= k
            if n < n_0 / 2:
                n_exit = t
                break
        ns.append(n_exit)
    b.wait()
    print(ns)
    return mean(ns)


def pool_init(b):
    global barrier
    barrier = b


if __name__ == "__main__":
    b = Barrier(N_PROCS)
    with Pool(N_PROCS, initializer=pool_init, initargs=(b, )) as p:
        ns = p.map(simulation, range(8))
        time_in_seconds = mean(ns) * DELTA_T
        T = BigTimedDelta(seconds=time_in_seconds)
        print(f"T = {T}\n  = {time_in_seconds} seconds")

""" Iodine-131
[22826, 22277, 22520, 22833, 20172, 19838, 18909, 18922, 24166, 19837, 15661, 23510, 20977, 26330, 24765, 23918, 18021, 26094]
[20610, 24430, 19181, 21292, 17239, 19535, 24591, 21777, 17487, 24533, 19213, 15588, 16927, 24941, 25262, 19955, 17273, 21779]
[20778, 22250, 20986, 23005, 18545, 21979, 21216, 20890, 29714, 21063, 20664, 21091, 20357, 21168, 18835, 24419, 23170, 22356]
[21811, 19196, 19000, 21371, 21706, 23743, 20598, 18630, 19847, 20709, 20588, 19349, 22434, 21257, 21177, 28932, 21855, 20003]
[24996, 24014, 14242, 21946, 24570, 20793, 17979, 22460, 19093, 20640, 18297, 11836, 18843, 21391, 19940, 20338, 20654, 18905]
[21825, 25987, 17282, 20926, 20960, 18684, 20183, 18738, 18420, 20233, 19235, 19257, 20195, 22381, 22519, 21726, 23836, 16787]
[25335, 19411, 26089, 18392, 17615, 23879, 20286, 18966, 25223, 24271, 22589, 18855, 19028, 20455, 21312, 21055, 29100, 20295]
[25149, 16773, 16742, 19707, 20400, 19692, 18906, 23332, 22977, 16186, 24085, 19889, 20062, 25012, 24301, 21354, 14916, 20838]
T = 701497/86400 days, 27 millis, 2982616275/134217728 nanos
  = 701497.4537037038 seconds
"""
""" Uranium-238
[22826, 22277, 22520, 22833, 20172, 19838, 18909, 18922, 24166, 19837, 15661, 23510, 20977, 26330, 24765, 23918, 18021, 26094, 22801, 24213, 27063, 17616, 19994, 22141, 24543]
[25335, 19411, 26089, 18392, 17615, 23879, 20286, 18966, 25223, 24271, 22589, 18855, 19028, 20455, 21312, 21055, 29100, 20295, 20666, 26465, 24387, 25819, 18698, 18852, 19762]
[21825, 25987, 17282, 20926, 20960, 18684, 20183, 18738, 18420, 20233, 19235, 19257, 20195, 22381, 22519, 21726, 23836, 16787, 22893, 17083, 22861, 21345, 21353, 20434, 23053]
[24996, 24014, 14242, 21946, 24570, 20793, 17979, 22460, 19093, 20640, 18297, 11836, 18843, 21391, 19940, 20338, 20654, 18905, 22117, 18464, 19093, 14677, 18372, 23589, 20460]
[25149, 16773, 16742, 19707, 20400, 19692, 18906, 23332, 22977, 16186, 24085, 19889, 20062, 25012, 24301, 21354, 14916, 20838, 20240, 24473, 17049, 23204, 23887, 19498, 17462]
[20610, 24430, 19181, 21292, 17239, 19535, 24591, 21777, 17487, 24533, 19213, 15588, 16927, 24941, 25262, 19955, 17273, 21779, 21765, 25896, 22920, 23819, 22435, 18389, 21687]
[21811, 19196, 19000, 21371, 21706, 23743, 20598, 18630, 19847, 20709, 20588, 19349, 22434, 21257, 21177, 28932, 21855, 20003, 23320, 21154, 18512, 22578, 21152, 22322, 19992]
[20778, 22250, 20986, 23005, 18545, 21979, 21216, 20890, 29714, 21063, 20664, 21091, 20357, 21168, 18835, 24419, 23170, 22356, 25078, 22405, 29613, 21916, 20382, 21575, 20181]
T = 4527607368510929/985500000 millenia
  = 1.4488343579234973e+17 seconds
"""
